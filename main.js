!function(){"use strict";class e{constructor(e,t,s,r,i,n){this._cardData=e,this._id=e._id,this._name=e.name,this._link=e.link,this._owner=e.owner._id,this._cardId=e._id,this._likes=e.likes,this._cardSelector=t,this._handleCardClick=s,this._handleDeleteCardBinButton=r,this._onLikeButtonToggle=i,this._currentUser=n}_onCardUnlike=e=>{this._likes=e.likes,this._favIconElement.classList.remove("card__fav-icon-selected"),this._favCountElement.textContent=this._likes.length};_onCardLike=e=>{this._likes=e.likes,this._favIconElement.classList.toggle("card__fav-icon-selected"),this._favCountElement.textContent=this._likes.length};_handleFavIconClick=()=>{this._likes.find((e=>e._id===this._currentUser._userData._id))?this._onLikeButtonToggle(this._cardId,"Unlike",this._onCardUnlike):this._onLikeButtonToggle(this._cardId,"like",this._onCardLike)};_onCardClick=()=>{this._handleCardClick(this._cardData)};getCardElement(){return this._cardTemplate=document.querySelector(this._cardSelector),this._cardElement=this._cardTemplate.content.querySelector(".card").cloneNode(!0),this._deleteCardIcon=this._cardElement.querySelector(".card__del-button"),this._owner===this._currentUser._userData._id?this._deleteCardIcon.classList.remove("card__del-button-hidden"):this._deleteCardIcon.classList.add("card__del-button-hidden"),this._favIconElement=this._cardElement.querySelector(".card__fav-icon"),this._likes.find((e=>e._id===this._currentUser._userData._id))?this._favIconElement.classList.add("card__fav-icon-selected"):this._favIconElement.classList.add("card__fav-icon"),this._favCountElement=this._cardElement.querySelector(".card__fav_count"),this._favCountElement.textContent=this._likes.length,this._addNewCardTitle=this._cardElement.querySelector(".card__title"),this._cardImage=this._cardElement.querySelector(".card__image"),this._addNewCardTitle.textContent=this._name,this._cardImage.setAttribute("src",`${this._link}`),this._cardImage.setAttribute("alt",`Image of ${this._name}`),this._setEventListeners(),this._cardElement}_setEventListeners(){this._favIconElement.addEventListener("click",this._handleFavIconClick),this._cardImage.addEventListener("click",this._onCardClick),this._deleteCardIcon.addEventListener("click",(()=>{this._handleDeleteCardBinButton(this._cardId,this._cardElement)}))}}var t=class{constructor(e,t){this._form=t,this._inputElementSelector=e.inputElementSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonSelector=e.inactiveButtonSelector,this._inputErrorSelector=e.inputErrorSelector,this._errorSelectorHide=e.errorSelectorHide,this._errorSelector=e.errorSelector}_showInputError(e){const t=e.validationMessage;e.classList.add(this._inputErrorSelector);const s=this._form.querySelector(`#${e.id}+ .${this._errorSelector}`);s.textContent=t,s.classList.add(this._inputErrorSelector)}_hideInputError(e){e.classList.remove(this._inputErrorSelector);const t=this._form.querySelector(`#${e.id}+ .${this._errorSelector}`);t.classList.remove(this._inputErrorSelector),t.textContent=""}toggleInputError(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_enableButton(){this._buttonElement.classList.remove(this._inactiveButtonSelector),this._buttonElement.removeAttribute("disabled",!1)}disableButton(){this._buttonElement.classList.add(this._inactiveButtonSelector),this._buttonElement.setAttribute("disabled",!0)}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputElementSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this.toggleInputError(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class s{constructor(e){let{popupModalSelector:t}=e;this._popupModal=document.querySelector(t),this.closeModal=this.closeModal.bind(this)}openModal(){this._popupModal.classList.add("modal_opened"),this._setEventListeners()}closeModal(){this._popupModal.classList.remove("modal_opened"),this._removeEventListeners()}_handleEscClose=e=>{"Escape"===e.key&&this.closeModal()};_closeModalByClick=e=>{(e.target===e.currentTarget||e.target.classList.contains("modal__close-button"))&&this.closeModal()};_removeEventListeners(){window.removeEventListener("keydown",this._handleEscClose),this._popupModal.removeEventListener("mousedown",this._closeModalByClick),this._popupModal.querySelector(".modal__close-button").removeEventListener("click",this.closeModal)}_setEventListeners(){window.addEventListener("keydown",this._handleEscClose),this._popupModal.addEventListener("mousedown",this._closeModalByClick),this._popupModal.querySelector(".modal__close-button").addEventListener("click",this.closeModal)}}class r extends s{constructor(e,t){super({popupModalSelector:e}),this._handleFormSubmit=t,this.handleSubmit=this.handleSubmit.bind(this),this._inputFields=this._popupModal.querySelectorAll(".modal__text-input")}_getInputValues(){const e=Array.from(this._popupModal.querySelectorAll(".modal__text-input")),t={};for(const s of e)t[s.name]=s.value;return t}setInputValues(e){this._inputFields.forEach((t=>{t.value=e[t.name]}))}closeModal(){super.closeModal(),this._popupModal.querySelector(".modal__form-content").reset()}handleSubmit(){this._handleFormSubmit(this._getInputValues())}_removeEventListeners(){super._removeEventListeners(),this._popupModal.removeEventListener("submit",this.handleSubmit)}_setEventListeners(){super._setEventListeners(),this._popupModal.addEventListener("submit",this.handleSubmit)}}class i{constructor(e){let{userData:t,selectors:s}=e;this._nameEl=s.name,this._linkEl=s.link,this._subtitleEl=s.subtitle,this._userData=t}setUserFields(){this._nameEl.textContent=this._userData.name,this._subtitleEl.textContent=this._userData.about,this._linkEl.setAttribute("src",this._userData.avatar)}getUserInfo(){return{name:this._userData.name,subtitle:this._userData.about,id:this._userData._id}}updateUserData(e){this._userData={...this._userData,...e}}}const n={inputElementSelector:".modal__text-input",submitButtonSelector:".modal__button",inactiveButtonSelector:"modal__button_disabled",inputErrorSelector:"modal__input-error_visible",errorSelectorHide:"modal__input-error-hide",errorSelector:"modal__input-error"},o=document.querySelector(n.submitButtonSelector),a=document.querySelector("#edit-profile"),l=document.querySelector("#add-new-card"),d=document.querySelector("#avatar-edit-modal"),c=document.querySelector("#create-button"),_=document.querySelector(".js-profile-edit-button"),u=document.querySelector(".profile__add-button"),h=document.querySelector(".cards__list"),m=document.querySelector(".profile__title"),p=document.querySelector(".profile__subtitle"),v=document.querySelector(".profile__image"),E=document.querySelector(".profile__avatar-edit-button"),b=document.querySelector("#avatar-save-button"),S=new r("#add-new-card",(function(e){c.textContent="Saving...",q.addNewCard(e).then((e=>{const t=B(e);w.prependItem(t),S.closeModal()})).catch((e=>{console.log(e)})).finally((()=>{c.textContent="Create"}))}),".modal__button"),f=new r("#edit-profile",(function(e){o.textContent="Saving...",q.editUserInfo(e).then((e=>{k.updateUserData(e),k.setUserFields(),f.closeModal()})).catch((e=>{console.log(e)})).finally((()=>{o.textContent="Save"}))}),".modal__button"),C=new r("#avatar-edit-modal",(function(e){b.textContent="Saving...",q.editAvatarLink(e).then((e=>{k.updateUserData(e),k.setUserFields(),C.closeModal()})).catch((e=>{console.error(e)})).finally((()=>{b.textContent="Save"}))}),".modal__button");let k;const L=new class extends s{constructor(e,t){super({popupModalSelector:e}),this.imageSelector=t}openModal(e){let{name:t,link:s}=e;const r=this._popupModal.querySelector(this.imageSelector),i=document.querySelector(".modal__image-caption");r.setAttribute("src",s),r.setAttribute("alt",t),i.textContent=t,super.openModal()}closeModal(){super.closeModal();const e=this._popupModal.querySelector(this.imageSelector);e.setAttribute("src",""),e.setAttribute("alt","")}}("#preview-image-modal",".modal-preview-image"),g=new class extends s{constructor(e,t,s){super({popupModalSelector:e}),this._handleFormSubmit=t,this._deleteConfirmButton=document.querySelector(s)}onYesClick=e=>{e.preventDefault(),this._handleFormSubmit(this.cardId,this.cardElement)};openModal(e,t){this.cardId=e,this.cardElement=t,super.openModal()}_removeEventListeners(){super._removeEventListeners(),this._deleteConfirmButton.removeEventListener("click",this.onYesClick)}_setEventListeners(){super._setEventListeners(),this._deleteConfirmButton.addEventListener("click",this.onYesClick)}}("#delete-image-confirm-modal",(function(e,t){q.deleteCard(e).then((()=>{t.remove(),g.closeModal()})).catch((e=>{console.log(e)}))}),"#delete-confirm-button"),y=new t(n,l),I=new t(n,a),M=new t(n,d),q=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getInitialCards(){return this._request(`${this._baseUrl}/cards/`,{method:"GET",headers:this._headers})}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers})}editUserInfo(e){return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.subtitle})})}addNewCard(e){return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}likeACard(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}unLikeACard(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}editAvatarLink(e){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})})}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"b685d3e0-616a-4dae-bc5b-53892a4f7953","Content-Type":"application/json"}}),w=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=t}appendItem(e){this._container.append(e)}renderItems(e){e.forEach((e=>{const t=this._renderer(e);this.appendItem(t)}))}prependItem(e){this._container.prepend(e)}}({items:q.getInitialCards,renderer:B},h);function B(t){return new e(t,"#card-template",D,A,U,k).getCardElement()}function U(e,t,s){"like"===t?q.likeACard(e).then((e=>{s(e)})).catch((e=>{console.error(e)})):q.unLikeACard(e).then(s).catch((e=>{console.error(e)}))}function D(e){L.openModal(e)}function A(e,t){g.openModal(e,t)}Promise.all([q.getUserInfo(),q.getInitialCards()]).then((e=>{let[t,s]=e;k=new i({userData:t,selectors:{name:m,subtitle:p,link:v}}),k.setUserFields(),w.renderItems(s)})).catch((e=>{console.error(e)})),_.addEventListener("click",(function(){I.disableButton();const e=k.getUserInfo();f.setInputValues(e),f.openModal()})),u.addEventListener("click",(function(){y.disableButton(),S.openModal()})),E.addEventListener("click",(function(){C.openModal(),M.disableButton()})),I.enableValidation(),y.enableValidation(),M.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,